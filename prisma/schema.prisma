// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  email         String          @unique
  password      String
  projects      Project[]       @relation("OwnerProjects")
  assignedTasks Task[]          @relation("AssignedTasks")
  memberProjects Membership[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Project {
  id            String          @id @default(uuid())
  name          String
  owner         User            @relation("OwnerProjects", fields: [ownerId], references: [id])
  ownerId       String
  tasks         Task[]
  members       Membership[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Task {
  id          String      @id @default(uuid())
  title       String
  description String?
  status      TaskStatus  @default(TODO)
  assignee    User?       @relation("AssignedTasks", fields: [assigneeId], references: [id])
  assigneeId  String?
  project     Project     @relation(fields: [projectId], references: [id])
  projectId   String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Membership {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  project    Project  @relation(fields: [projectId], references: [id])
  projectId  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([userId, projectId])
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}